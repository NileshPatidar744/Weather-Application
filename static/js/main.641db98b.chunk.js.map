{"version":3,"sources":["keys.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API_KEY","BASE_URL","api","key","keys","base","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","fetch","then","res","json","result","console","log","Button","onClick","class","name","sys","country","d","date","String","window","Date","slice","dateBuild","Math","round","src","icon","alt","description","humidity","pressure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,CACbC,QAAS,mCACTC,SAAU,6C,gJCERC,EAAM,CACVC,IAAKC,IAAKJ,QACVK,KAAMD,IAAKH,UAiGEK,MA9Ff,WACE,IAMA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA4BA,OACE,qBACEC,UACyB,oBAAhBF,EAAQG,KACXH,EAAQG,KAAKC,KAAO,GAClB,UACA,WACF,MANR,SASE,iCACE,qBAAKF,UAAU,cAAf,SACE,8DAGF,sBAAKA,UAAU,mBAAf,UACE,uBACEG,KAAK,OACLC,YAAY,eACZJ,UAAU,aACVK,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WAjDQ,SAACH,GACH,UAAVA,EAAEf,KACJmB,MAAM,GAAD,OAAIpB,EAAIG,KAAR,qBAAyBG,EAAzB,+BAAqDN,EAAIC,MAC3DoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjB,EAAS,IACTE,EAAWe,GACXC,QAAQC,IAAIF,SA4CZ,cAACG,EAAA,EAAD,CAAQjB,UAAU,cAAckB,QAtCrB,SAACZ,GAClBI,MAAM,GAAD,OAAIpB,EAAIG,KAAR,qBAAyBG,EAAzB,+BAAqDN,EAAIC,MAC3DoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjB,EAAS,IACTE,EAAWe,GACXC,QAAQC,IAAIF,OAgCV,SACE,mBAAGK,MAAM,6BAKW,oBAAhBrB,EAAQG,KACd,gCACE,sBAAKD,UAAU,qBAAf,UACE,sBAAKA,UAAU,WAAf,UACGF,EAAQsB,KADX,KACmBtB,EAAQuB,IAAIC,WAE/B,sBAAKtB,UAAU,OAAf,cAvEM,SAACuB,GACjB,IAAIC,EAAOC,OAAO,IAAIC,OAAOC,MAE7B,OADAH,EAAOA,EAAKI,MAAM,EAAG,IAqEaC,CAAU,IAAIF,YAExC,sBAAK3B,UAAU,oBAAf,UACE,sBAAKA,UAAU,cAAf,UAA8B8B,KAAKC,MAAMjC,EAAQG,KAAKC,MAAtD,YACA,qBAAKF,UAAU,eAAf,SAA8B,qBAAKgC,IAAG,0CAAqClC,EAAQA,QAAQ,GAAGmC,KAAxD,QAAoEC,IAAI,mBAC9G,qBAAKlC,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGqC,cAC7C,sBAAKnC,UAAU,KAAf,UACC,6CAAgB8B,KAAKC,MAAMjC,EAAQG,KAAKmC,UAAxC,OACA,uBACA,6CAAgBN,KAAKC,MAAMjC,EAAQG,KAAKoC,UAAxC,mBAML,SCpFKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.641db98b.chunk.js","sourcesContent":["module.exports = {\r\n    API_KEY: \"8602fe68848fccec7081728215f98b51\",\r\n    BASE_URL: \"https://api.openweathermap.org/data/2.5/\",\r\n  };","import React, { useState } from \"react\";\nimport keys from \"./keys\";\nimport { Button } from \"semantic-ui-react\";\n\nconst api = {\n  key: keys.API_KEY,\n  base: keys.BASE_URL,\n};\n\nfunction App() {\n  const dateBuild = (d) => {\n    let date = String(new window.Date());\n    date = date.slice(3, 15);\n    return date;\n  };\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const searchKey = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n\n  const searchIcon = (e) => {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setQuery(\"\");\n        setWeather(result);\n        console.log(result);\n      });\n\n  };\n\n\n\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 18\n            ? \"app hot\"\n            : \"app cold\"\n          : \"app\"\n      }\n    >\n      <main>\n        <div className=\"top-heading\">\n          <h1>Check Weather Of Your City</h1>\n        </div>\n\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a city\"\n            className=\"search-bar\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={searchKey}\n          />\n          <Button className=\"search-icon\" onClick={searchIcon}>\n            <i class=\"fas fa-search fa-2x\"></i>\n          </Button>\n\n        </div>\n\n        {typeof weather.main != \"undefined\" ? (\n          <div>\n            <div className=\"location-container\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"date\"> {dateBuild(new Date())}</div>\n            </div>\n            <div className=\"weather-container\">\n              <div className=\"temperature\">{Math.round(weather.main.temp)}Â°C </div>\n              <div className=\"weather-icon\"><img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`} alt=\"Weather icon\" /></div>\n              <div className=\"weather\">{weather.weather[0].description}</div>\n              <div className=\"wx\">\n               <h3> Humidity: {Math.round(weather.main.humidity)}%</h3>\n               <br/>\n               <h3>Pressure : {Math.round(weather.main.pressure)} hPa</h3>\n              </div>\n             \n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}